Ass1

Q1.Write a Scala program to check if a given number is positive, negative, or
zero using if/else statements.

object NumberCheck {
  def main(args: Array[String]): Unit = {
    println("Enter a number:")
    val number = scala.io.StdIn.readDouble()

    if (number > 0) {
      println(s"The number $number is positive.")
    } else if (number < 0) {
      println(s"The number $number is negative.")
    } else {
      println(s"The number is zero.")
    }
  }
}

###################################################################################

Q2. Write a Scala program to find the second maximum of four given numbers
using if/else statements.

object SecondMaximum {
  def main(args: Array[String]): Unit = {
    println("Enter four numbers:")

    // Reading four numbers
    val a = scala.io.StdIn.readDouble()
    val b = scala.io.StdIn.readDouble()
    val c = scala.io.StdIn.readDouble()
    val d = scala.io.StdIn.readDouble()

    // Initialize variables for maximum and second maximum
    var max = Double.MinValue
    var secondMax = Double.MinValue

    // Check for maximum and second maximum among the numbers
    if (a > max) {
      secondMax = max
      max = a
    } else if (a > secondMax) {
      secondMax = a
    }

    if (b > max) {
      secondMax = max
      max = b
    } else if (b > secondMax) {
      secondMax = b
    }

    if (c > max) {
      secondMax = max
      max = c
    } else if (c > secondMax) {
      secondMax = c
    }

    if (d > max) {
      secondMax = max
      max = d
    } else if (d > secondMax) {
      secondMax = d
    }

    // Print the second maximum number
    println(s"The second maximum number is: $secondMax")
  }
}
###################################################################

Q3.Write a Scala program to find the factorial of a given number using a while
loop.

object Factorial {
  def main(args: Array[String]): Unit = {
    println("Enter a number:")
    val number = scala.io.StdIn.readInt()

    if (number < 0) {
      println("Factorial is not defined for negative numbers.")
    } else {
      var factorial = 1
      var i = number

      while (i > 0) {
        factorial *= i
        i -= 1
      }

      println(s"The factorial of $number is: $factorial")
    }
  }
}

############################################################################

Q4. Write a program to calculate the average of all numbers between n1 and n2
(e.g.100 to 300. Read values of n1 and n2 from user)

object AverageCalculator {
  def main(args: Array[String]): Unit = {
    println("Enter the first number (n1):")
    val n1 = scala.io.StdIn.readInt()

    println("Enter the second number (n2):")
    val n2 = scala.io.StdIn.readInt()

    if (n1 > n2) {
      println("The first number (n1) should be less than or equal to the second number (n2).")
    } else {
      val count = n2 - n1 + 1 // Total numbers in the range
      var sum = 0

      // Calculate the sum of all numbers between n1 and n2
      var i = n1
      while (i <= n2) {
        sum += i
        i += 1
      }

      // Calculate the average
      val average = sum.toDouble / count
      println(s"The average of numbers between $n1 and $n2 is: $average")
    }
  }
}
***************************************************************************************

Ass2
Write a program to read five random numbers and check whether numbers
are perfect or not.

object PerfectNumberCheck {
  def main(args: Array[String]): Unit = {
    println("Enter five numbers:")

    // Reading five numbers
    val numbers = Array.fill(5)(scala.io.StdIn.readInt())

    for (num <- numbers) {
      if (isPerfect(num)) {
        println(s"$num is a perfect number.")
      } else {
        println(s"$num is not a perfect number.")
      }
    }
  }

  // Function to check if a number is perfect
  def isPerfect(n: Int): Boolean = {
    if (n < 1) return false
    var sum = 0
    for (i <- 1 until n) {
      if (n % i == 0) sum += i
    }
    sum == n
  }
}
###################################################################################

Q2. Write a program to calculate the sum of prime numbers between 1 to 100.

object PrimeSum {
  def main(args: Array[String]): Unit = {
    val start = 1
    val end = 100

    var sum = 0

    // Loop through numbers from 1 to 100
    for (num <- start to end) {
      if (isPrime(num)) {
        sum += num
      }
    }

    println(s"The sum of prime numbers between $start and $end is: $sum")
  }

  // Function to check if a number is prime
  def isPrime(n: Int): Boolean = {
    if (n <= 1) return false
    for (i <- 2 to math.sqrt(n).toInt) {
      if (n % i == 0) return false
    }
    true
  }
}
########################################################################################

Q3. Write a program to read an integer from a user and convert it to binary and
octal using user defined functions.

object NumberConverter {
  def main(args: Array[String]): Unit = {
    println("Enter an integer:")
    val number = scala.io.StdIn.readInt()

    println(s"The binary representation of $number is: ${toBinary(number)}")
    println(s"The octal representation of $number is: ${toOctal(number)}")
  }

  // Function to convert a number to binary
  def toBinary(n: Int): String = {
    Integer.toBinaryString(n)
  }

  // Function to convert a number to octal
  def toOctal(n: Int): String = {
    Integer.toOctalString(n)
  }
}

##########################################################################################

Q4. Write a Scala print the Fibonacci series up to a given number using a user
defined function.

object FibonacciSeries {
  def main(args: Array[String]): Unit = {
    println("Enter a number:")
    val limit = scala.io.StdIn.readInt()

    println(s"Fibonacci series up to $limit:")
    printFibonacciSeries(limit)
  }

  // User-defined function to print the Fibonacci series
  def printFibonacciSeries(n: Int): Unit = {
    var a = 0
    var b = 1

    if (n >= a) print(s"$a ")
    if (n >= b) print(s"$b ")

    var next = a + b
    while (next <= n) {
      print(s"$next ")
      a = b
      b = next
      next = a + b
    }
    println() // Move to the next line after printing the series
  }
}
***************************************************************************
Ass3

1. Write a program to count uppercase letters in a string and convert it to
lowercase and display the new string.

object CountUppercase {
  def main(args: Array[String]): Unit = {
    println("Enter a string:")
    val input = scala.io.StdIn.readLine()

    val uppercaseCount = input.count(_.isUpper)
    val lowercaseString = input.toLowerCase

    println(s"Number of uppercase letters: $uppercaseCount")
    println(s"String converted to lowercase: $lowercaseString")
  }
}

###################################################################

2. Write a program to read a character from the user and count the number of
occurrences of that character in the given string.

object CountCharacter {
  def main(args: Array[String]): Unit = {
    println("Enter a string:")
    val input = scala.io.StdIn.readLine()

    println("Enter a character to count:")
    val charToCount = scala.io.StdIn.readChar()

    val count = input.count(_ == charToCount)

    println(s"The character '$charToCount' appears $count times in the string.")
  }
}
########################################################################

3. Write a Scala program to remove the character in a given position of a given
string. Check for a given position should be in the range 0...string length -1
inclusive.

object RemoveCharacter {
  def main(args: Array[String]): Unit = {
    println("Enter a string:")
    val input = scala.io.StdIn.readLine()

    println("Enter the position of the character to remove (0-indexed):")
    val position = scala.io.StdIn.readInt()

    if (position >= 0 && position < input.length) {
      val updatedString = input.substring(0, position) + input.substring(position + 1)
      println(s"String after removing character at position $position: $updatedString")
    } else {
      println("Invalid position. Please enter a position in the range 0 to string length - 1.")
    }
  }
}
###########################################################################

4. Write a Scala program to check if a given string is a palindrome using if/else
statements and pattern matching.

object PalindromeCheck {
  def main(args: Array[String]): Unit = {
    println("Enter a string:")
    val input = scala.io.StdIn.readLine()

    if (isPalindrome(input)) {
      println(s"The string '$input' is a palindrome.")
    } else {
      println(s"The string '$input' is not a palindrome.")
    }
  }

  // Function to check if a string is a palindrome
  def isPalindrome(str: String): Boolean = {
    val normalizedStr = str.toLowerCase.replaceAll("\\s", "")
    normalizedStr == normalizedStr.reverse
  }
}
******************************************************************************

Ass4

1. Write a Scala program to check if two given strings are rotations of each
other.

object StringRotationCheck {
  def main(args: Array[String]): Unit = {
    println("Enter the first string:")
    val str1 = scala.io.StdIn.readLine()

    println("Enter the second string:")
    val str2 = scala.io.StdIn.readLine()

    if (areRotations(str1, str2)) {
      println(s"'$str1' and '$str2' are rotations of each other.")
    } else {
      println(s"'$str1' and '$str2' are not rotations of each other.")
    }
  }

  // Function to check if two strings are rotations
  def areRotations(s1: String, s2: String): Boolean = {
    s1.length == s2.length && (s1 + s1).contains(s2)
  }
}
######################################################################

2. Create an array of strings and read a string from the user. Display all the
elements of an array containing a given string.

object ArrayStringSearch {
  def main(args: Array[String]): Unit = {
    val stringsArray = Array("apple", "banana", "cherry", "date", "grape")

    println("Enter a string to search:")
    val searchString = scala.io.StdIn.readLine()

    val matchingElements = stringsArray.filter(_.contains(searchString))

    if (matchingElements.isEmpty) {
      println(s"No elements found containing '$searchString'.")
    } else {
      println(s"Elements containing '$searchString': ${matchingElements.mkString(", ")}")
    }
  }
}
#####################################################################

3. Write a Scala program to reverse every word in a given string.

object ReverseWords {
  def main(args: Array[String]): Unit = {
    println("Enter a string:")
    val input = scala.io.StdIn.readLine()

    val reversedWords = input.split(" ").map(_.reverse).mkString(" ")

    println(s"The string with every word reversed is: $reversedWords")
  }
}
########################################################################
4. Write a Scala program to read two strings, append them together and return
the result. If the length of the strings is different, remove characters from the
beginning of the longer string and make them equal length.

object AppendStrings {
  def main(args: Array[String]): Unit = {
    println("Enter the first string:")
    val str1 = scala.io.StdIn.readLine()

    println("Enter the second string:")
    val str2 = scala.io.StdIn.readLine()

    val result = appendEqualLength(str1, str2)

    println(s"The resulting string is: $result")
  }

  // Function to append two strings, making their lengths equal
  def appendEqualLength(s1: String, s2: String): String = {
    if (s1.length == s2.length) {
      s1 + s2
    } else if (s1.length > s2.length) {
      s1.substring(s1.length - s2.length) + s2
    } else {
      s1 + s2.substring(s2.length - s1.length)
    }
  }
}
*******************************************************

Ass5